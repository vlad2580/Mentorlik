version: '3.8'

services:
  # PostgreSQL database
  db:
    image: postgres:14-alpine
    container_name: mentorlik_postgres
    environment:
      POSTGRES_DB: mentorlik_db
      POSTGRES_USER: ${DB_USERNAME:-mentorlik_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-mentorlik_password}
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5434:5432"
    networks:
      - mentorlik-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-mentorlik_user} -d mentorlik_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot backend
  backend:
    build:
      context: ../backend
    container_name: mentorlik_backend
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/mentorlik_db
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME:-mentorlik_user}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD:-mentorlik_password}
      # Disable Elasticsearch autoconfiguration
      SPRING_AUTOCONFIGURE_EXCLUDE: org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientAutoConfiguration,org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientAutoConfiguration
      # Disable OAuth for testing
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID: disabled
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET: disabled
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_LINKEDIN_CLIENT_ID: disabled
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_LINKEDIN_CLIENT_SECRET: disabled
      # Email configuration
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_USERNAME: admin@mentorlik.com
      SPRING_MAIL_PASSWORD: mmpu xdid kdit dvjx
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: true
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: true
      # Дополнительные параметры для отладки
      LOGGING_LEVEL_ROOT: INFO
      LOGGING_LEVEL_COM_MENTORLIK: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: DEBUG
      LOGGING_LEVEL_ORG_HIBERNATE_SQL: DEBUG
    ports:
      - "8080:8080"
    networks:
      - mentorlik-network
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  # Angular frontend
  frontend:
    build:
      context: ../frontend-angular
    container_name: mentorlik_frontend
    ports:
      - "80:80"
    networks:
      - mentorlik-network
    depends_on:
      - backend
    restart: unless-stopped
    
  # pgAdmin - PostgreSQL Admin
  pgadmin:
    image: dpage/pgadmin4
    container_name: mentorlik_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@mentorlik.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - mentorlik-network
    depends_on:
      - db
    restart: unless-stopped

networks:
  mentorlik-network:
    driver: bridge